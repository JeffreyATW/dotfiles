#!/bin/bash

PROMPT_COLOR_1="\033[1;30;46m\]"
PROMPT_COLOR_2="\033[1;30;42m\]"
PROMPT_COLOR_3="\033[1;30;43m\]"

GIT_PS1_SHOWDIRTYSTATE=true
GIT_BRANCH_COLOR="\[\033[38;5;155m\]\[\033[48;5;235m\]"
PS1_EXIT_RED="\[\033[38;5;208m\]\[\033[48;5;52m\]"

# === Initializing static variables ===========================================
case $TERM in
    xterm* | screen)
        CORNER_TOP="`echo -e "\xE2\x94\x8C"`"
        CORNER_BOTTOM="`echo -e "\xE2\x94\x94"`"
        LINE="`echo -e "\xE2\x94\x80"`"
        LINE_TWO="$LINE$LINE"
        OPENBRACKET="`echo -e "\xE2\x95\xA2"`"
        CLOSEBRACKET="`echo -e "\xE2\x95\x9f"`"
        ;;
    *)
        LINE_TWO="--"
        ;;
esac

if [ "$PROMPT_COLOR_1" == "" ];
then
    PROMPT_COLOR_1="\[\033[48;5;$(($(hostname | cksum | cut -c1-3) % 56))m\]"
fi

if [ "$PROMPT_COLOR_2" == "" ];
then
    PROMPT_COLOR_2="\[\033[48;5;$(($(hostname | cksum | cut -c1-3) % 65))m\]"
fi

GRAY="\[\033[1;30m\]"
LIGHT_GRAY="\[\033[0;37m\]"
NO_COLOUR="\[\033[0m\]"

type __git_ps1 > /dev/null 2>&1
PS1_GIT_NOT_AVAILABLE=$?


# === The actual function to create the prompt ================================
function prompt_command
{
    # === first inspect the previous exit code ================================
    # when this is not zero (=previous command exited with an error, show it
    # in the prompt
    local es=$?
    local exitStatusLength=""
    if [ $es -ne 0 ]
    then
        local exitStatus="${PS1_EXIT_RED} $(printf "%3d" ${es}) $NO_COLOUR$LINE_TWO"
        exitStatusLength="       "
    fi

    history -a # write previous executed command to the history

    # === use other color when user is root ===================================
    if [ $UID -eq "0" ]; # user is root
    then
        PROMPT_COLOR_1="\[\033[0;41m\]"
    fi

    # === First part of the prompt ============================================
    # this part is always present and show the basic info
    local hostn=$(hostname -s)
    local usern=$(whoami)

    HOME_PWD="${PWD/#$HOME/~}"

    if [ ${#HOME_PWD} -gt 50 ];
    then
        local working_dir=${HOME_PWD:0:12}...${HOME_PWD:$((${#HOME_PWD}-35))};
    else
        local working_dir=$HOME_PWD
    fi

    PS1="\n$NO_COLOUR$CORNER_TOP$LINE_TWO$OPENBRACKET$PROMPT_COLOR_1 ${working_dir} $NO_COLOUR$CLOSEBRACKET$LINE_TWO$OPENBRACKET$PROMPT_COLOR_2 $usern@$hostn $NO_COLOUR$CLOSEBRACKET$LINE_TWO$exitStatus"
        

    # === Second part of the prompt: git info =================================
    if [ $COLUMNS -gt 98 ];
    then
        if [ $PS1_GIT_NOT_AVAILABLE = 0 ];
        then
            local git_branch=$(__git_ps1 '  %s  ')
            PS1="$PS1$GIT_BRANCH_COLOR$git_branch$NO_COLOUR"
        fi
        PS1="$PS1${LINE_TWO}$LIGHT_GRAY${LINE_TWO}$GRAY${LINE_TWO}$NO_COLOUR"
    fi


    # === Third part of the prompt, for wide screens ==========================
    # shows the current time on the right side of the screen
    if [ ${COLUMNS} -gt 128 ];
    then
        local fill=$(printf "%$(($COLUMNS-${#usern}-${#hostn}-${#working_dir}-${#git_branch}-${#exitStatusLength}-46))s" '')

        PS1="$PS1$fill$GRAY${LINE_TWO}$LIGHT_GRAY${LINE_TWO}$NO_COLOUR${LINE_TWO}$OPENBRACKET$PROMPT_COLOR_3 \t $NO_COLOUR$CLOSEBRACKET${LINE_TWO}$LIGHT_GRAY${LINE_TWO}$GRAY${LINE_TWO}$NO_COLOUR"
    fi

    # === Last part of the prompt =============================================
    # adds a newline and an arrow
    PS1="$PS1\n$CORNER_BOTTOM`echo -e "\xE2\x94\x80"``echo -e "\xE2\x94\x80"``echo -e "\xE2\x96\xBA"` "

    if [ $ITERM_SESSION_ID ]; then
        echo -ne "\033];${PWD##*/}\007";
    fi
}

PROMPT_COMMAND=prompt_command
